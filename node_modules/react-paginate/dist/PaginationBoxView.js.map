{"version":3,"sources":["../react_components/PaginationBoxView.js"],"names":["PaginationBoxView","props","handlePreviousPage","evt","preventDefault","returnValue","state","selected","handlePageSelected","handleNextPage","pageCount","setState","callCallback","selectedItem","onPageChange","pagination","items","pageRangeDisplayed","index","bind","pageClassName","pageLinkClassName","activeClassName","leftSide","rightSide","page","breakView","pageView","marginPagesDisplayed","keys","Object","breakLabelKey","length","breakLabelValue","breakLabel","breakClassName","initialPage","forcePage","disableInitialCallback","nextProps","disabled","disabledClassName","previousClasses","previousClassName","nextClasses","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","propTypes","number","isRequired","node","func","bool","string","defaultProps"],"mappings":"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","file":"PaginationBoxView.js","sourcesContent":["'use strict';\n\nimport React, { Component, PropTypes } from 'react';\nimport classNames from 'classnames';\n\nimport createFragment from 'react-addons-create-fragment';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount             : PropTypes.number.isRequired,\n    pageRangeDisplayed    : PropTypes.number.isRequired,\n    marginPagesDisplayed  : PropTypes.number.isRequired,\n    previousLabel         : PropTypes.node,\n    nextLabel             : PropTypes.node,\n    breakLabel            : PropTypes.node,\n    onPageChange          : PropTypes.func,\n    initialPage           : PropTypes.number,\n    forcePage             : PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName    : PropTypes.string,\n    pageClassName         : PropTypes.string,\n    pageLinkClassName     : PropTypes.string,\n    activeClassName       : PropTypes.string,\n    previousClassName     : PropTypes.string,\n    nextClassName         : PropTypes.string,\n    previousLinkClassName : PropTypes.string,\n    nextLinkClassName     : PropTypes.string,\n    disabledClassName     : PropTypes.string,\n    breakClassName        : PropTypes.string\n  };\n\n  static defaultProps = {\n    pageCount             : 10,\n    pageRangeDisplayed    : 2,\n    marginPagesDisplayed  : 3,\n    activeClassName       : \"selected\",\n    previousClassName     : \"previous\",\n    nextClassName         : \"next\",\n    previousLabel         : \"Previous\",\n    nextLabel             : \"Next\",\n    breakLabel            : \"...\",\n    disabledClassName     : \"disabled\",\n    disableInitialCallback: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: props.initialPage ? props.initialPage :\n                props.forcePage   ? props.forcePage :\n                0\n    };\n  }\n\n  componentDidMount() {\n    // Call the callback with the initialPage item:\n    if (typeof(this.props.initialPage) !== 'undefined' && !this.props.disableInitialCallback) {\n      this.callCallback(this.props.initialPage);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (typeof(nextProps.forcePage) !== 'undefined' && this.props.forcePage !== nextProps.forcePage) {\n      this.setState({selected: nextProps.forcePage});\n    }\n  }\n\n  handlePreviousPage = evt => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (this.state.selected > 0) {\n      this.handlePageSelected(this.state.selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (this.state.selected < this.props.pageCount - 1) {\n      this.handlePageSelected(this.state.selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({selected: selected});\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  callCallback = (selectedItem) => {\n    if (typeof(this.props.onPageChange) !== \"undefined\" &&\n        typeof(this.props.onPageChange) === \"function\") {\n      this.props.onPageChange({selected: selectedItem});\n    }\n  };\n\n  pagination = () => {\n    let items = {};\n\n    if (this.props.pageCount <= this.props.pageRangeDisplayed) {\n\n      for (let index = 0; index < this.props.pageCount; index++) {\n        items['key' + index] = <PageView\n          onClick={this.handlePageSelected.bind(null, index)}\n          selected={this.state.selected === index}\n          pageClassName={this.props.pageClassName}\n          pageLinkClassName={this.props.pageLinkClassName}\n          activeClassName={this.props.activeClassName}\n          page={index + 1} />\n      }\n\n    } else {\n\n      let leftSide  = (this.props.pageRangeDisplayed / 2);\n      let rightSide = (this.props.pageRangeDisplayed - leftSide);\n\n      if (this.state.selected > this.props.pageCount - this.props.pageRangeDisplayed / 2) {\n        rightSide = this.props.pageCount - this.state.selected;\n        leftSide  = this.props.pageRangeDisplayed - rightSide;\n      }\n      else if (this.state.selected < this.props.pageRangeDisplayed / 2) {\n        leftSide  = this.state.selected;\n        rightSide = this.props.pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n\n      for (index = 0; index < this.props.pageCount; index++) {\n\n        page = index + 1;\n\n        let pageView = (\n          <PageView\n            onClick={this.handlePageSelected.bind(null, index)}\n            selected={this.state.selected === index}\n            pageClassName={this.props.pageClassName}\n            pageLinkClassName={this.props.pageLinkClassName}\n            activeClassName={this.props.activeClassName}\n            page={index + 1} />\n        );\n\n        if (page <= this.props.marginPagesDisplayed) {\n          items['key' + index] = pageView;\n          continue;\n        }\n\n        if (page > this.props.pageCount - this.props.marginPagesDisplayed) {\n          items['key' + index] = pageView;\n          continue;\n        }\n\n        if ((index >= this.state.selected - leftSide) && (index <= this.state.selected + rightSide)) {\n          items['key' + index] = pageView;\n          continue;\n        }\n\n        let keys            = Object.keys(items);\n        let breakLabelKey   = keys[keys.length - 1];\n        let breakLabelValue = items[breakLabelKey];\n\n        if (this.props.breakLabel && breakLabelValue !== breakView) {\n          breakView = (\n            <BreakView\n              breakLabel={this.props.breakLabel}\n              breakClassName={this.props.breakClassName}\n            />\n          );\n\n          items['key' + index] = breakView;\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    let disabled = this.props.disabledClassName;\n\n    const previousClasses = classNames(this.props.previousClassName,\n                                       {[disabled]: this.state.selected === 0});\n\n    const nextClasses = classNames(this.props.nextClassName,\n                                   {[disabled]: this.state.selected === this.props.pageCount - 1});\n\n    return (\n      <ul className={this.props.containerClassName}>\n        <li className={previousClasses}>\n          <a onClick={this.handlePreviousPage}\n             className={this.props.previousLinkClassName}\n             tabIndex=\"0\"\n             onKeyPress={this.handlePreviousPage}>\n            {this.props.previousLabel}\n          </a>\n        </li>\n\n        {createFragment(this.pagination())}\n\n        <li className={nextClasses}>\n          <a onClick={this.handleNextPage}\n             className={this.props.nextLinkClassName}\n             tabIndex=\"0\"\n             onKeyPress={this.handleNextPage}>\n            {this.props.nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n};\n"]}